/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
def MAVEN_PARAMS = '-B -e -ntp -s $MAVEN_SETTINGS -Djava.net.preferIPv4Stack=true'

pipeline {

    agent {
        label 'checkin'
    }

    tools {
        jdk 'java-11'
    }

    environment {
        MAVEN_OPTS = '-Xmx3g'
        TESTCONTAINERS_RYUK_DISABLED = 'true'
    }

    options {
        buildDiscarder(
            logRotator(artifactNumToKeepStr: '5', numToKeepStr: '10')
        )
    }

    stages {
        stage('Initial') {
            steps {
                // Clean up any orphaned containers that may be lingering
                sh "docker container prune -f"
                configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                    sh "./mvnw ${MAVEN_PARAMS} clean install -Dquickly"
                    sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar cfz cq-artifacts.tgz *"
                    sh "mv -t . /home/jenkins/.m2/repository/org/apache/camel/quarkus/cq-artifacts.tgz"
                    stash name: 'cq-artifacts', includes: 'cq-artifacts.tgz'
                }
            }
        }

        stage('Tests') {
            parallel {
                // %generated-stages-start%
                stage('Product :: Group 01') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-product/group-01 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Product :: Group 02') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-product/group-02 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Allowed :: Group 01') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-allowed/group-01 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed JVM :: Group 01') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-jvm/group-01 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 01') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-01 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 02') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-02 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 03') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-03 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 04') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-04 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 05') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-05 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                stage('Mixed Native :: Group 06') {
                    agent {
                        label "rhel"
                    }
                    steps {
                        unstash name: 'cq-artifacts'
                        sh "mv -t /home/jenkins/.m2/repository/org/apache/camel/quarkus cq-artifacts.tgz"
                        sh "cd /home/jenkins/.m2/repository/org/apache/camel/quarkus && tar xfz cq-artifacts.tgz"
                        configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                            sh "cd product/integration-tests-mixed-native/group-06 && ../../../mvnw ${MAVEN_PARAMS} test -fae"
                        }
                    }
                    post {
                        always {
                            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                            junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                        }
                    }
                }
                // %generated-stages-end%
            }
        }
    }
}
